name: UMC Hackathon CI/CD

on:
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Generate application-prod.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROD_YML }}" > ./src/main/resources/application-prod.yml
        shell: bash

      - name: Grant permission to gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Compress JAR with tar.gz
        run: |
          mkdir -p package
          cp build/libs/*.jar package/
          tar -czf umc-hackathon-app.tar.gz -C package .
        shell: bash

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: umc-hackathon-artifact
          path: umc-hackathon-app.tar.gz

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: umc-hackathon-artifact
          path: ./deploy-package

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          tar_file=deploy-package/umc-hackathon-app.tar.gz

          # JAR 파일을 EC2로 전송
          scp -i private_key.pem -o StrictHostKeyChecking=no "$tar_file" $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/umc-hackathon-app.tar.gz

          # EC2에서 기존 프로세스 종료 후 새 애플리케이션 실행
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST << 'EOF'
            # 기존 Java 프로세스 종료
            echo "=== Stopping existing application ==="
            pkill -f "umc-hackathon" || echo "No existing process found"
            sleep 5

            # 애플리케이션 디렉토리 준비
            cd /home/ec2-user
            rm -rf umc-hackathon-app
            mkdir -p umc-hackathon-app logs
            tar -xzf umc-hackathon-app.tar.gz -C umc-hackathon-app

            # Java 버전 및 JAR 파일 확인
            echo "=== Environment Check ==="
            java -version
            echo "JAR files:"
            ls -la umc-hackathon-app/

            # Spring Boot 애플리케이션 시작 (logback이 logs/umc-hackathon.log에 로깅)
            echo "=== Starting Spring Boot Application ==="
            cd umc-hackathon-app
            nohup java -Dspring.profiles.active=prod \
                       -Xms512m -Xmx1024m \
                       -jar *.jar > /dev/null 2>&1 &

            # PID 저장
            APP_PID=$!
            echo $APP_PID > ../app.pid
            echo "Application started with PID: $APP_PID"

            # 애플리케이션 시작 대기
            echo "=== Waiting for application startup ==="
            sleep 20

            # 프로세스 확인
            if ps -p $APP_PID > /dev/null 2>&1; then
                echo "✅ Application is running successfully"
                echo "Process info:"
                ps -o pid,cmd,%cpu,%mem -p $APP_PID
            else
                echo "❌ Application failed to start"
                echo "Checking for any Java processes:"
                ps aux | grep java || echo "No Java processes found"
                exit 1
            fi

            # logback 설정에 따른 로그 파일 확인 (logs/umc-hackathon.log)
            echo "=== Application Logs Check ==="
            if [ -f logs/umc-hackathon.log ]; then
                echo "Application log file exists"
                echo "Recent logs from umc-hackathon.log:"
                tail -20 logs/umc-hackathon.log
            else
                echo "Log file not yet created, waiting..."
                sleep 10
                if [ -f logs/umc-hackathon.log ]; then
                    echo "Log file created:"
                    tail -10 logs/umc-hackathon.log
                else
                    echo "⚠️ Log file still not found"
                fi
            fi

            echo "=== Deployment completed successfully ==="

          EOF

          rm -f private_key.pem
